ALU only supports the following operations:
A + B
A AND B
A
NOT A

N is set when the ALU output is negative
Z is set when the ALU output is zero

The ALU output then goes into the shifter, which can shift it 1 bit either direction.
Possible to left shift 2 bits if you do R + R in the ALU, then shift left using the shifter.

MULT:
Take value at top of stack, call this "A", multiply it by the value in "mmmmmm", call this "B".
Basically need to add the value A as many times as B.
A = top of stack			// Number at top of stack
B = mmm mmm           // 6 bit number after MULT opcode
C = 0									// Will hold final multiplication value
while (b > 0) {
	C = A + C;					// Add A and C, A is value to be mult. and C is final mult value.
	* check for overflow *
	if (C is negative) {	// If we hit negative, then we overflowed
		AC = -1;		// make AC -1 and return.
		return;
	}
	B--;					// decrement counter each pass
}
// mult was successful so:
top of stack = C 		// need to replace the value at the top of the stack with C, final mult value
AC = 0;							// AC should equal 0 and we should return.
return;